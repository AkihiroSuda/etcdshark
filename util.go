package main

import (
	"bufio"
	"encoding/hex"
	"fmt"
	"io"
	"strings"
)

// hexdumpAll dumps all the contents of the stream.
// Note that this function blocks for an endless stream.
func hexdumpAll(br *bufio.Reader, w io.Writer) error {
	buf := make([]byte, 512)
	offsetColumnLen := len("00000000")
	rsizeSum := 0
	for {
		rsize, err := br.Read(buf)
		if err != nil && err != io.EOF {
			return err
		}
		if err == io.EOF {
			return nil
		}
		bufDump := hex.Dump(buf[:rsize])
		// adjust the offset column
		//  1. eliminate the column ("00000000"...) generated by hex.Dump()
		//  2. prepend a new column : rsizeSum + i * 16
		for i, rawLine := range strings.Split(bufDump, "\n") {
			if rawLine == "" {
				continue
			}
			line := rawLine[offsetColumnLen:]
			s := fmt.Sprintf("%08X %s\n", rsizeSum+i*16, line)
			_, err = w.Write([]byte(s))
			if err != nil {
				return err
			}
		}
		rsizeSum += rsize
	}
}
